AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template for launching MLFlow Infrastructure'

Parameters:

  DatabaseName:
    Type: String
    Description: The database name used for mlflow backend storage

  DatabaseInstanceType:
    Type: String
    Description: "The mlflow database instance type. For a list of avaialable instances refer to: https://aws.amazon.com/rds/aurora/pricing/"
    Default: db.t2.small

  DbUsername:
    Type: String
    Description: The mlflow database user name.
    Default: root
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: must contain only alphanumeric characters and be of length 1-16
    MaxLength: '16'
    MinLength: '1'

  DbPassword:
    Type: String
    Description: The mlflow database password
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: must contain only alphanumeric characters and be of length 8-64
    MaxLength: '64'
    MinLength: '8'
    NoEcho: true

  EBBundleBucket:
    Type: String
    Description: The S3 bucket used for storing ElasticBeansTalk application bundle

  EBBundleKey:
    Type: String
    Description: The S3 object key  for the bundle used for storing ElasticBeansTalk application

Resources:
  
  AlarmTopic:
    Type: AWS::SNS::Topic
    Description: SNS Topic used for the alarms.
    Properties:
      DisplayName: Alarm Topic
  
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Description: S3 bucket used for mlflow artifact storage
    DependsOn: MlfEbInstanceSecurityGroup
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
    DeletionPolicy: Delete
  
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Public subnet groups used for the database and ElasticBeansTalk application.
      SubnetIds:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
  
  ParameterGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties: 
      Description: Database parameter group 
      Family: aurora-mysql5.7
      Parameters:
        max_connections: 300
  
  DatabaseCluster:
    Type: AWS::RDS::DBCluster
    Description: Mlflow database cluster
    Properties:
      Engine: aurora-mysql
      MasterUsername: !Ref DbUsername
      MasterUserPassword: !Ref DbPassword
      BackupRetentionPeriod: 35
      PreferredBackupWindow: 02:00-03:00
      PreferredMaintenanceWindow: mon:03:00-mon:04:00
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      VpcSecurityGroupIds: 
        - !Ref DatabaseSecurityGroup
      DBClusterParameterGroupName: default.aurora-mysql5.7
  
  DatabaseInstance:
    Type: AWS::RDS::DBInstance
    Description: Mlflow database instance
    Properties:
      Engine: aurora-mysql
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !Ref DatabaseInstanceType
      DBSubnetGroupName: !Ref DatabaseSubnetGroup    
      DBParameterGroupName: !Ref ParameterGroup
      PubliclyAccessible: "true"
      DBInstanceIdentifier: !Ref DatabaseName

  DatabaseCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigerred when CPU utilization is over 80%.
      Namespace: AWS/RDS
      MetricName: CPUUtilization
      Unit: Percent
      Statistic: Average
      Period: 300
      EvaluationPeriods: 5
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DatabaseInstance
      AlarmActions:
        - !Ref AlarmTopic
      InsufficientDataActions:
        - !Ref AlarmTopic
  

  DatabaseMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Trigerred when memory is under 800MB.
      Namespace: AWS/RDS
      MetricName: FreeableMemory
      Unit: Bytes
      Statistic: Average
      Period: 300
      EvaluationPeriods: 5
      Threshold: 800000000
      ComparisonOperator: LessThanOrEqualToThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DatabaseInstance
      AlarmActions:
        - !Ref AlarmTopic
      InsufficientDataActions:
        - !Ref AlarmTopic
      OKActions: 
        - !Ref AlarmTopic

  VPC: 
    Type: AWS::EC2::VPC
    Description: Mlflow infrastructure VPC
    Properties:
      CidrBlock: "10.193.0.0/16"
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags: 
        - Key: Name 
          Value: !Join ["-", [!Ref DatabaseName, "database"]]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref DatabaseName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs ]
      CidrBlock: "10.193.12.0/24"
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: Public Subnet for Availability Zone 1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs ]
      CidrBlock: "10.193.13.0/24"
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: Public Subnet for Availability Zone 2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name 
          Value: !Sub Route table for ${DatabaseName}

  DefaultPublicRoute: 
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      VpcId: !Ref VPC
      GroupDescription: Security group for the MLFlow database
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name
          Value: !Sub ${DatabaseName}-security-group  
  
  DatabaseSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allows ingress access to the Database from ElasticBeansTalk instances
      GroupId: !Ref DatabaseSecurityGroup
      SourceSecurityGroupId: !Ref MlfEbInstanceSecurityGroup
      IpProtocol: '-1'
      FromPort: 3306
      ToPort: 3306

  MLFEbsApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      Description: MLFlow ElasticBeanstalk application
  
  MlFlowEbsApplicationVersion:
    Type: AWS::ElasticBeanstalk::ApplicationVersion
    Properties:
      ApplicationName: !Ref MLFEbsApplication
      Description: MLFlow ElasticBeanstalk Application Version
      SourceBundle:
        S3Bucket: !Ref EBBundleBucket
        S3Key: !Ref EBBundleKey

  MLFlowConfigurationTemplate:
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
    DependsOn: MlfEbInstanceSecurityGroup
    Properties:
      ApplicationName: !Ref MLFEbsApplication
      Description: MLFlow ElasticBeanstalk Configuration Template
      OptionSettings:
      - Namespace: aws:autoscaling:asg
        OptionName: MinSize
        Value: '2'
      - Namespace: aws:autoscaling:asg
        OptionName: MaxSize
        Value: '6'
      - Namespace: aws:elasticbeanstalk:environment
        OptionName: EnvironmentType
        Value: LoadBalanced
      SolutionStackName: 64bit Amazon Linux 2018.03 v2.14.1 running Docker 18.09.9-ce

  MLFlowEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    DependsOn: MLFlowConfigurationTemplate
    Properties:
      ApplicationName: !Ref MLFEbsApplication
      Description: MLFlow ElasticBeanstalk Environment
      TemplateName: !Ref MLFlowConfigurationTemplate
      VersionLabel: !Ref MlFlowEbsApplicationVersion
      OptionSettings:
        - 
          Namespace: "aws:autoscaling:launchconfiguration"
          OptionName: "InstanceType"
          Value: "t2.micro"
        -
          Namespace: "aws:ec2:vpc"
          OptionName: "VPCId"
          Value: !Ref VPC
        -
          Namespace: "aws:ec2:vpc"
          OptionName: "Subnets"
          Value: !Sub ${PublicSubnet1},${PublicSubnet2}
        -
          Namespace: "aws:ec2:vpc"
          OptionName: "ELBSubnets"
          Value: !Sub ${PublicSubnet1}
        - 
          Namespace: aws:autoscaling:launchconfiguration
          OptionName: SecurityGroups
          Value: !Ref MlfEbInstanceSecurityGroup
        - 
          Namespace: aws:elb:loadbalancer
          OptionName: SecurityGroups
          Value: !Ref MlfEbLoadBalancerSecurityGroup
        - Namespace: aws:elbv2:loadbalancer
          OptionName: SecurityGroups
          Value: !Ref MlfEbLoadBalancerSecurityGroup
        -
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "ARTIFACT_PATH"
          Value: !Sub s3://${ArtifactsBucket}
        -
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "DB_URL"
          Value: !Sub mysql://${DbUsername}:${DbPassword}@${DatabaseCluster.Endpoint.Address}:${DatabaseCluster.Endpoint.Port}
        -
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "PROJECT_NAME"
          Value: mlflow_db_schema
        -
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "DATABASE_ENDPOINT"
          Value: !Sub ${DatabaseCluster.Endpoint.Address}
        -
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "DATABASE_USERNAME"
          Value: !Ref DbUsername
        -
          Namespace: "aws:elasticbeanstalk:application:environment"
          OptionName: "DATABASE_PASSWORD"
          Value: !Ref DbPassword
        
  MlfEbLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allows HTTP ingress and egress to the load balancer
        VpcId: !Ref VPC
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  MlfEbInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allows HTTP traffic to ElasticBeansTalk instances
        GroupName : "MlfEbInstanceSecurityGroup"
        VpcId: !Ref VPC
        SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0

  MlfEbInstanceSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allows the load balancer to communicate with ElasticBeansTalk instances
      GroupId: !Ref MlfEbInstanceSecurityGroup
      SourceSecurityGroupId: !Ref MlfEbLoadBalancerSecurityGroup
      IpProtocol: '-1'
      FromPort: 80
      ToPort: 80
        
Outputs:

  ArtifactRoot:
    Description: S3 Artifacts root to be used with mlflow
    Value: !Sub s3://${ArtifactsBucket}

  DatabaseUrl:
    Description: The database URL to be used with mlflow
    Value: !Sub mysql://${DbUsername}:${DbPassword}@${DatabaseCluster.Endpoint.Address}:${DatabaseCluster.Endpoint.Port}

  DatabaseUsername:
    Description: The database username
    Value: !Ref DbUsername
    
  DatabasePassword:
    Description: The database password
    Value: !Ref DbPassword

  DatabaseEndpoint:
    Description: The database endpoint
    Value: !Sub ${DatabaseCluster.Endpoint.Address}

  DatabasePort:
    Description: The database port
    Value: !Sub ${DatabaseCluster.Endpoint.Port}